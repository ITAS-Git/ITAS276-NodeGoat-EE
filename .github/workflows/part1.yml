name: Security Tests

on:
  pull_request: {}
  workflow_dispatch: {}
  push:
    branches:
      - main
      - master

permissions:
  contents: read
  security-events: write

jobs:

  discord-begin:
    name: Start Notification
    runs-on: ubuntu-latest
    steps:
      - name: Discord Notification - Workflow Started
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: ${{ github.repository }}
          embed-title: "üöÄ Security Pipeline Started"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: "[View Pipeline](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          embed-author-name: "${{ github.triggering_actor }}"

  docker-build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Discord Notification - Start Docker Build
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: ${{ github.repository }}
          embed-title: "üê≥ Starting Docker Build & Push"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: "Building Docker Image\n[View Pipeline](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          embed-author-name: "${{ github.triggering_actor }}"
          embed-color: "3066993"

      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: edemeruwa/itas276-assignment1
          tags: |
            latest
            ${{ github.event.release.tag_name || github.sha }}

      - name: Build and Push Docker Image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Discord Notification - Docker Build Finished
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: ${{ github.repository }}
          embed-title: "‚úÖ Docker Build Completed"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: |
            Docker Image Pushed Successfully  
            [View on Docker Hub](https://hub.docker.com/repository/docker/edemeruwa/itas276-assignment1)
          embed-author-name: "${{ github.triggering_actor }}"
          embed-color: "3066993"

  semgrep:
    name: Semgrep Static Analysis
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
      - name: Notify - Starting Semgrep Scan
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: ${{ github.repository }}
          embed-title: "üõ†Ô∏è Starting Semgrep Scan"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: "[View Pipeline](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          embed-author-name: "${{ github.triggering_actor }}"
          embed-color: "3447003"

      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Run Semgrep Scan
        run: semgrep ci --sarif > semgrep_output.sarif
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

      - name: Upload Semgrep SARIF
        id: upload-semgrep-sarif
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-output
          path: semgrep_output.sarif

      - name: Notify - Semgrep Completed
        uses: tsickert/discord-webhook@v5.3.0
        if: always()
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: ${{ github.repository }}
          embed-title: "‚úÖ Semgrep Scan Completed"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: |
            [View Pipeline](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})  
            [‚¨áÔ∏è Download SARIF Output](${{ steps.upload-semgrep-sarif.outputs.artifact-url }})
          embed-author-name: "${{ github.triggering_actor }}"
          embed-color: "${{ job.status == 'success' && '3066993' || job.status == 'failure' && '15158332' || '9807270' }}"

  snyk:
    name: Snyk Dependency Scan
    runs-on: ubuntu-latest
    steps:
      - name: Notify - Starting Snyk Scan
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: ${{ github.repository }}
          embed-title: "üõ†Ô∏è Starting Snyk Scan"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: "[View Pipeline](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          embed-author-name: "${{ github.triggering_actor }}"
          embed-color: "3447003"

      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Run Snyk Scan and Generate SARIF
        run: snyk test --sarif --file=package.json > snyk_output.sarif || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload Snyk SARIF
        id: upload-snyk-sarif
        uses: actions/upload-artifact@v4
        with:
          name: snyk-output
          path: snyk_output.sarif

      - name: Notify - Snyk Completed
        uses: tsickert/discord-webhook@v5.3.0
        if: always()
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: ${{ github.repository }}
          embed-title: "üîç Snyk Scan Completed"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: |
            [View Pipeline](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})  
            [‚¨áÔ∏è Download SARIF Output](${{ steps.upload-snyk-sarif.outputs.artifact-url }})
          embed-author-name: "${{ github.triggering_actor }}"
          embed-color: "${{ job.status == 'success' && '3066993' || job.status == 'failure' && '15158332' || '9807270' }}"

  discord-end:
    name: End Notification
    runs-on: ubuntu-latest
    needs:
      - semgrep
      - snyk
    if: always()
    steps:
      - name: Discord Notification - Workflow Completed
        uses: tsickert/discord-webhook@v5.3.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
          username: ${{ github.repository }}
          embed-title: "üèÅ Security Workflow Finished"
          embed-url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          embed-description: |
            [View Pipeline](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})  
            Final status: **${{ needs.semgrep.result == 'success' && needs.snyk.result == 'success' && '‚úÖ Success' || '‚ùå Failure' }}**
          embed-author-name: "${{ github.triggering_actor }}"
          embed-color: "${{ needs.semgrep.result == 'success' && needs.snyk.result == 'success' && '3066993' || '15158332' }}"

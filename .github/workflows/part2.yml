# Name of this GitHub Actions workflow.
name: Static Self hosted 

on:
  # Scan changed files in PRs (diff-aware scanning):
  pull_request: {}
  # Scan on-demand through GitHub Actions interface:
  workflow_dispatch: {}
  # Scan mainline branches if there are changes to .github/workflows/semgrep.yml:
  push:
    branches:
      - main
      - master


jobs:
  semgrep:
    # User definable name of this GitHub Actions job.
    name: semgrep/ci scan
    # Running on self hosting only works for linux machinens
    runs-on: self-hosted
  
    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: semgrep/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      # Fetch project source with GitHub Actions Checkout. Use either v3 or v4.
      - uses: actions/checkout@v4
      # Run the "semgrep ci" command on the command line of the docker image.
      - run: semgrep ci | tee semgrep_output.txt
        env:
          # Connect to Semgrep AppSec Platform through your SEMGREP_APP_TOKEN.
          # Generate a token from Semgrep AppSec Platform > Settings
          # and add it to your GitHub secrets.
           SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
      - name: Upload Semgrep Output
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-output
          path: semgrep_output.txt
  # Tst for scan        
  snyk:
    name: snyk/docker-security scan
    # Again running on self hosting only works for linux machinens
    runs-on: self-hosted
    
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor


